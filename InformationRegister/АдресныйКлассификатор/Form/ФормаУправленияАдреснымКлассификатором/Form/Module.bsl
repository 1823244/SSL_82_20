////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.СостояниеРегистра.Заголовок = ПолучитьСостояниеАдресногоКлассификатора(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_АдресныйКлассификатор" Тогда
		Элементы.СостояниеРегистра.Заголовок = ПолучитьСостояниеАдресногоКлассификатора(ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьСостояниеАдресногоКлассификатора(Контекст)
	
	ЧислоЗаполненныхАдресныхОбъектов = АдресныйКлассификатор.ЧислоЗаполненныхАдресныхОбъектов();
	Если ЧислоЗаполненныхАдресныхОбъектов > 0 Тогда
		Заголовок = 
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru = 'Объектов в адресном классификаторе: %1.'"),
							Строка(ЧислоЗаполненныхАдресныхОбъектов));
		Контекст.Элементы.ПроверитьОбновление.Доступность = Истина;
	Иначе
		Заголовок = НСтр("ru = 'Адресный классификатор не заполнен.'");
		Контекст.Элементы.ПроверитьОбновление.Доступность = Ложь;
	КонецЕсли;
	
	Возврат Заголовок;
	
КонецФункции

&НаКлиенте
Процедура ЗагрузитьАдресныйКлассификатор(Команда)
	
	АдресныйКлассификаторКлиент.ЗагрузитьАдресныйКлассификатор();
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьАдресныйКлассификатор(Команда)
	
	АдресныйКлассификаторКлиент.ОчиститьКлассификатор();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьОбновлениеАдресногоКлассификатора(Команда)
	
	АдресныйКлассификаторКлиент.ОпределитьНеобходимостьОбновленияАдресныхОбъектов();
	
КонецПроцедуры



