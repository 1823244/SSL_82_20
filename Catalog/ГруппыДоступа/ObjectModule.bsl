////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Формирует временную таблицу старых пользователей для обработчика ПриЗаписи.
Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Ссылка = Справочники.ГруппыДоступа.Администраторы Тогда
		// Всегда предопределенный профиль Администратор
		Профиль = Справочники.ПрофилиГруппДоступа.Администратор;
		// Не может быть персональной группой доступа
		Пользователь = Неопределено;
		// Только обычные пользователи
		ТипПользователей = Справочники.Пользователи.ПустаяСсылка();
		// Изменение разрешено только полноправному пользователю
		Если НЕ ПривилегированныйРежим()
		   И НЕ УправлениеДоступом.ЕстьРоль("ПолныеПрава") Тогда
			//
			ВызватьИсключение(НСтр("ru = 'Предопределенную группу доступа Администраторы
			                             |можно изменять, либо в привилегированном режиме,
			                             |либо при наличии роли ""Полные права"".'"));
		КонецЕсли;
		// Нельзя устанавливать предопределенный профиль Администратор произвольной группе доступа
	ИначеЕсли Профиль = Справочники.ПрофилиГруппДоступа.Администратор Тогда
		ВызватьИсключение(НСтр("ru = 'Предопределенный профиль Администратор может быть только
		                             |у предопределенной группы доступа Администраторы.'"));
	КонецЕсли;
	
	Если НЕ ЭтоГруппа Тогда
		
		Если НЕ ДополнительныеСвойства.Свойство("НеОбновлятьРолиПользователей") Тогда
			//
			Если ЗначениеЗаполнено(Ссылка) Тогда
				СтараяТаблицаПользователи = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Ссылка, "Пользователи");
				СтарыеУчастникиГруппыДоступа = СтараяТаблицаПользователи.Выгрузить().ВыгрузитьКолонку("Пользователь");
			Иначе
				СтарыеУчастникиГруппыДоступа = Новый Массив;
			КонецЕсли;
			//
			ДополнительныеСвойства.Вставить("СтарыеУчастникиГруппыДоступа", СтарыеУчастникиГруппыДоступа);
		КонецЕсли;
		
		// Автоматическая установка реквизитов для персональной группы доступа
		Если ЗначениеЗаполнено(Пользователь) Тогда
			Родитель         = УправлениеДоступом.РодительПерсональныхГруппДоступа();
			ТипПользователей = Неопределено;
		Иначе
			Пользователь = Неопределено;
			Если Родитель = УправлениеДоступом.РодительПерсональныхГруппДоступа(Истина) Тогда
				Родитель = Неопределено;
			КонецЕсли;
		КонецЕсли;
		
		// При снятии пометки удаления снятие пометки удаления с профиля групп доступа этой группы
		Если НЕ ПометкаУдаления
		   И ОбщегоНазначения.ПолучитьЗначениеРеквизита(Ссылка,  "ПометкаУдаления") = Истина
		   И ОбщегоНазначения.ПолучитьЗначениеРеквизита(Профиль, "ПометкаУдаления") = Истина Тогда
			ЗаблокироватьДанныеДляРедактирования(Профиль);
			ПрофильОбъект = Профиль.ПолучитьОбъект();
			ПрофильОбъект.ПометкаУдаления = Ложь;
			ПрофильОбъект.Записать();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Обновляет:
// - роли добавленных, оставшихся и удаленных пользователей;
// - РегистрСведений.ТаблицыГруппДоступа;
// - РегистрСведений.ЗначенияГруппДоступа.
//
Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЭтоГруппа Тогда
		
		Если НЕ ДополнительныеСвойства.Свойство("НеОбновлятьРолиПользователей") Тогда
			УправлениеДоступом.ОбновитьРолиПользователейПриИзмененииГруппыДоступа(Ссылка, ДополнительныеСвойства.СтарыеУчастникиГруппыДоступа);
		КонецЕсли;
		
		УправлениеДоступом.ОбновитьТаблицыГруппДоступа(Ссылка);
		
		УправлениеДоступом.ЗаписатьЗначенияГруппДоступа(Ссылка);
		
		УправлениеДоступом.ОбновитьПодчиненныхПользователейГруппДоступа();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ДополнительныеСвойства.Свойство("ПроверенныеРеквизитыОбъекта") Тогда
		ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(
			ПроверяемыеРеквизиты, ДополнительныеСвойства.ПроверенныеРеквизитыОбъекта);
	КонецЕсли;
	
КонецПроцедуры
