////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропуск инициализации, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если ЭтаФорма.Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Раздельная настройка дополнительных реквизитов и дополнительных сведений.
	
	Если Объект.Предопределенный Тогда
		Элементы.Наименование.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	ЗаполнитьИспользованиеДополнительныхСвойств();
	
	Если НЕ ИспользоватьДопРеквизиты И НЕ ИспользоватьДопСведения Тогда
		Отказ = Истина;
		ВызватьИсключение НСтр("ru = 'Использование свойств не определено.'");
	КонецЕсли;
	
	Если НЕ ИспользоватьДопРеквизиты Тогда
		Элементы.ДополнительныеРеквизиты.Видимость = Ложь;
		Элементы.ДополнительныеСведения.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		
	ИначеЕсли НЕ ИспользоватьДопСведения Тогда
		Элементы.ДополнительныеСведения.Видимость = Ложь;
		Элементы.ДополнительныеРеквизиты.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	КонецЕсли;
	
	Если ИспользоватьДопРеквизиты Тогда
		Для Каждого Строка Из Объект.ДополнительныеРеквизиты Цикл
			Если НЕ Строка.Свойство.ЭтоДополнительноеСведение Тогда
				ДополнительныеРеквизиты.Добавить().Свойство = Строка.Свойство;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ИспользоватьДопСведения Тогда
		Для Каждого Строка Из Объект.ДополнительныеСведения Цикл
			Если Строка.Свойство.ЭтоДополнительноеСведение Тогда
				ДополнительныеСведения.Добавить().Свойство = Строка.Свойство;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ИспользоватьДопРеквизиты И ИспользоватьДопСведения Тогда
		Заголовок = Объект.Наименование + " " + НСтр("ru = '(Набор дополнительных реквизитов и сведений)'")
	ИначеЕсли ИспользоватьДопРеквизиты Тогда
		Заголовок = Объект.Наименование + " " + НСтр("ru = '(Набор дополнительных реквизитов)'")
	ИначеЕсли ИспользоватьДопСведения Тогда
		Заголовок = Объект.Наименование + " " + НСтр("ru = '(Набор дополнительных сведений)'")
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект)
	
	ТекущийОбъект.ДополнительныеРеквизиты.Очистить();
	ТекущийОбъект.ДополнительныеСведения.Очистить();
	
	Если ИспользоватьДопРеквизиты Тогда
		Для Каждого Строка Из ДополнительныеРеквизиты Цикл
			ТекущийОбъект.ДополнительныеРеквизиты.Добавить().Свойство = Строка.Свойство;
		КонецЦикла;
	КонецЕсли;
	
	Если ИспользоватьДопСведения Тогда
		Для каждого Строка Из ДополнительныеСведения Цикл
			ТекущийОбъект.ДополнительныеСведения.Добавить().Свойство = Строка.Свойство;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_НаборыДополнительныхРеквизитовИСведений", Объект.Ссылка, Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// При записи свойства необходимо перенести свойство в соответствующую группу и
	// обновить поле Комментарий (если требуется).
	
	Если ИмяСобытия = "Запись_ДополнительныеРеквизитыИСведения" Тогда
		ПроверитьСоставыТаблицПослеЗаписиСвойства(Параметр.ЭтоДополнительноеСведение, Источник);
		
	ИначеЕсли ИмяСобытия = "ПодборСвойствВНабор" Тогда
		
		ДобавляемыеСвойства = Новый Массив;
		
		Если Параметр.ЭтоДополнительноеСведение Тогда
			Таблица = ДополнительныеСведения;
		Иначе
			Таблица = ДополнительныеРеквизиты
		КонецЕсли;
		
		Для каждого Добавляемый Из Параметр.ДобавляемыеСвойства Цикл
			
			Отбор = Новый Структура("Свойство", Добавляемый);
			
			Если Таблица.НайтиСтроки(Отбор).Количество() = 0 Тогда
				ДобавляемыеСвойства.Добавить(Добавляемый);
			КонецЕсли;
		КонецЦикла;
		
		Если ДобавляемыеСвойства.Количество() > 0 Тогда
			ДобавитьСвойства(ДобавляемыеСвойства);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ ДополнительныеРеквизиты

&НаКлиенте
Процедура ДополнительныеРеквизитыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРеквизитыПередУдалением(Элемент, Отказ)
	
	ДополнительныеСвойстваПередУдалением(Элемент, ДополнительныеРеквизиты);
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРеквизитыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТаблицаВыбор(Элемент, ВыбраннаяСтрока, СтандартнаяОбработка);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ ДополнительныеСведения

&НаКлиенте
Процедура ДополнительныеСведенияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеСведенияПередУдалением(Элемент, Отказ)
	
	ДополнительныеСвойстваПередУдалением(Элемент, ДополнительныеСведения);
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеСведенияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТаблицаВыбор(Элемент, ВыбраннаяСтрока, СтандартнаяОбработка);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ПодборДопРеквизитов(Команда)
	
	ВызватьФормуПодбора(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборДопСведений(Команда)
	
	ВызватьФормуПодбора(Истина);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ЗаполнитьИспользованиеДополнительныхСвойств()
	
	Если Объект.Ссылка = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка() Тогда
		ИспользоватьДопРеквизиты = Ложь;
		ИспользоватьДопСведения = Ложь;
		Возврат;
	КонецЕсли;
	
	Если Объект.Ссылка.Предопределенный
	   И Объект.Ссылка.Родитель = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка() Тогда
		
		СсылкаПредопределенного = Объект.Ссылка;
	Иначе
		СсылкаПредопределенного = Объект.Ссылка.Родитель;
	КонецЕсли;
	
	Если СсылкаПредопределенного = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка() Тогда
		ВызватьИсключение НСтр("ru = 'Не найден владелец свойств.'");
	КонецЕсли;
	
	ВидыСвойствНабора = УправлениеСвойствами.ВидыСвойствНабора(СсылкаПредопределенного);
	ИспользоватьДопРеквизиты = ВидыСвойствНабора.ДополнительныеРеквизиты;
	ИспользоватьДопСведения  = ВидыСвойствНабора.ДополнительныеСведения;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДобавитьВыделенныеСвойства(Знач ДобавляемыеСвойства, ДопРеквизиты, ДопСведения)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДополнительныеРеквизитыИСведения.Ссылка КАК Свойство
	|ПОМЕСТИТЬ Временная
	|ИЗ
	|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
	|ГДЕ
	|	(ДополнительныеРеквизитыИСведения.Ссылка В (&ДопРеквизиты)
	|			ИЛИ ДополнительныеРеквизитыИСведения.Ссылка В (&ДопСведения))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДополнительныеРеквизитыИСведения.Ссылка,
	|	ДополнительныеРеквизитыИСведения.ЭтоДополнительноеСведение
	|ИЗ
	|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
	|		ЛЕВОЕ СОЕДИНЕНИЕ Временная КАК Временная
	|		ПО ДополнительныеРеквизитыИСведения.Ссылка = Временная.Свойство
	|ГДЕ
	|	ДополнительныеРеквизитыИСведения.Ссылка В ИЕРАРХИИ(&ДобавляемыеСвойства)
	|	И НЕ ДополнительныеРеквизитыИСведения.ЭтоГруппа
	|	И Временная.Свойство ЕСТЬ NULL 
	|	И НЕ ДополнительныеРеквизитыИСведения.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДополнительныеРеквизитыИСведения.Наименование";
	
	Запрос.УстановитьПараметр("ДобавляемыеСвойства", ДобавляемыеСвойства);
	Запрос.УстановитьПараметр("ДопРеквизиты",        ДопРеквизиты);
	Запрос.УстановитьПараметр("ДопСведения",         ДопСведения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ДопРеквизиты.Очистить();
	ДопСведения.Очистить();
	
	Если Выборка.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ЭтоДополнительноеСведение Тогда
			ДопСведения.Добавить(Выборка.Ссылка);
		Иначе
			ДопРеквизиты.Добавить(Выборка.Ссылка);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура ДополнительныеСвойстваПередУдалением(Элемент, ТаблицаСвойств)
	
	МассивУдаляемыхСвойств = Новый Массив;
	
	Для Каждого ВыдСтрока Из Элемент.ВыделенныеСтроки Цикл
		Свойство = Элемент.ДанныеСтроки(ВыдСтрока).Свойство;
		МассивУдаляемыхСвойств.Добавить(Свойство);
		Строки = ТаблицаСвойств.НайтиСтроки(Новый Структура("Свойство", Свойство));
		ТаблицаСвойств.Удалить(Строки[0]);
	КонецЦикла;
	
	Если МассивУдаляемыхСвойств.Количество() > 0 Тогда
		ОповеститьОбИзмененииНабора("Удаление", МассивУдаляемыхСвойств);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВызватьФормуПодбора(ЭтоДополнительноеСведение)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЭтоДополнительноеСведение", ЭтоДополнительноеСведение);
	
	ВыбранныеСвойства = Новый Массив;
	
	Если ЭтоДополнительноеСведение Тогда
		Для Каждого Строка Из ДополнительныеСведения Цикл
			ВыбранныеСвойства.Добавить(Строка.Свойство);
		КонецЦикла;
	Иначе
		Для Каждого Строка Из ДополнительныеРеквизиты Цикл
			ВыбранныеСвойства.Добавить(Строка.Свойство);
		КонецЦикла;
	КонецЕсли;
	
	ПараметрыФормы.Вставить("ВыбранныеСвойства", ВыбранныеСвойства);
	
	ОткрытьФорму("Справочник.НаборыДополнительныхРеквизитовИСведений.Форма.ПодборСвойств",
	             ПараметрыФормы,
	             ЭтаФорма,
	             УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ОповеститьОбИзмененииНабора(Операция, МассивСвойств)
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("Операция",      Операция);
	ПараметрыОповещения.Вставить("МассивСвойств", МассивСвойств);
	
	Оповестить("ИзменилсяНаборВыбранных", ПараметрыОповещения, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьСоставыТаблицПослеЗаписиСвойства(Знач ЭтоДополнительноеСведение, Знач Свойство)
	
	// Определение из какой таблицы в какую может потребоваться переносить свойство.
	Если ЭтоДополнительноеСведение Тогда
		ТаблицаПриемник = ДополнительныеСведения;
		ТаблицаИсточник = ДополнительныеРеквизиты;
	Иначе
		ТаблицаПриемник = ДополнительныеРеквизиты;
		ТаблицаИсточник = ДополнительныеСведения;
	КонецЕсли;
	
	// Проверка входит ли свойство в таблицу, из которой нужно переносить.
	Строки = ТаблицаИсточник.НайтиСтроки(Новый Структура("Свойство", Свойство));
	Если Строки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// Удаление из одной таблицы.
	Индекс = ТаблицаИсточник.Индекс(Строки[0]);
	ТаблицаИсточник.Удалить(Индекс);
	
	// Добавление в другую таблицу.
	НоваяСтрока = ТаблицаПриемник.Добавить();
	НоваяСтрока.Свойство = Свойство;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСвойства(ДобавляемыеСвойства)
	
	ДопРеквизиты  = Новый Массив;
	Для каждого Строка Из ДополнительныеРеквизиты Цикл
		ДопРеквизиты.Добавить(Строка.Свойство);
	КонецЦикла;
	
	ДопСведения  = Новый Массив;
	Для каждого Строка Из ДополнительныеСведения Цикл
		ДопСведения.Добавить(Строка.Свойство);
	КонецЦикла;
	
	ОбщийМассивСвойств = Новый Массив;
	
	Если ДобавитьВыделенныеСвойства(ДобавляемыеСвойства, ДопРеквизиты, ДопСведения) Тогда
		
		Модифицированность = Истина;
		
		Для каждого ДобавляемыйРеквизит Из ДопРеквизиты Цикл
			НоваяСтрока = ДополнительныеРеквизиты.Добавить();
			НоваяСтрока.Свойство = ДобавляемыйРеквизит;
			ОбщийМассивСвойств.Добавить(ДобавляемыйРеквизит);
		КонецЦикла;
		
		Для каждого ДобавляемоеСведение Из ДопСведения Цикл
			НоваяСтрока = ДополнительныеСведения.Добавить();
			НоваяСтрока.Свойство = ДобавляемоеСведение;
			ОбщийМассивСвойств.Добавить(ДобавляемоеСведение);
		КонецЦикла;
		
		ОповеститьОбИзмененииНабора("Добавление", ОбщийМассивСвойств);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВыбор(Элемент, ВыбраннаяСтрока, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ОткрываетсяИзНабораСвойств", Истина);
	ПараметрыФормы.Вставить("Ключ", Элемент.ДанныеСтроки(ВыбраннаяСтрока).Свойство);
	
	ОткрытьФорму("ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.Форма.ФормаЭлемента", ПараметрыФормы);
	
КонецПроцедуры
