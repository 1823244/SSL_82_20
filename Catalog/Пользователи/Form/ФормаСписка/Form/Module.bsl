////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбновитьЗначениеПараметраКомпоновкиДанных(ПользователиСписок, "НеуказанныйПользователь", Пользователи.СвойстваНеуказанногоПользователя().СтандартнаяСсылка);
	
	ОбновитьЗначениеПараметраКомпоновкиДанных(ПользователиСписок, "РазделениеВыключено", НЕ ОбщегоНазначенияПовтИсп.РазделениеВключено());
	
	ПоказыватьНедействительныхПользователей = Ложь;
	
	Если Параметры.РежимВыбора Тогда
		
		РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		
	Иначе
		
		// только если не режим выбора, делаем фильтрацию
		
		Если ПоказыватьНедействительныхПользователей Тогда
			ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(ПользователиСписок.Отбор, "Недействителен");
		Иначе	
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
				ПользователиСписок.Отбор,
				"Недействителен",
				Ложь);
		КонецЕсли;
			
	КонецЕсли;
	
	ИспользоватьГруппы = ПолучитьФункциональнуюОпцию("ИспользоватьГруппыПользователей");
	
	Если ТипЗнч(Параметры.ТекущаяСтрока) = Тип("СправочникСсылка.ГруппыПользователей") Тогда
		Если ИспользоватьГруппы Тогда
			Элементы.ГруппыПользователей.ТекущаяСтрока = Параметры.ТекущаяСтрока;
		Иначе
			Параметры.ТекущаяСтрока = Неопределено;
		КонецЕсли;
	Иначе
		ТекущийЭлемент = Элементы.ПользователиСписок;
		Элементы.ГруппыПользователей.ТекущаяСтрока = Справочники.ГруппыПользователей.ВсеПользователи;
	КонецЕсли;
	
	Если НЕ ИспользоватьГруппы Тогда
		Параметры.ВыборГруппПользователей = Ложь;
		Элементы.ГруппаПоказыватьПользователейДочернихГрупп.Видимость = Ложь;
		Элементы.СоздатьГруппуПользователей.Видимость = Ложь;
	КонецЕсли;
	
	// Настройка постоянных данных для списка пользователей
	ОбновитьЗначениеПараметраКомпоновкиДанных(ПользователиСписок, "ПустойУникальныйИдентификатор", Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000"));
	ГруппаПользователейВсеПользователи = Справочники.ГруппыПользователей.ВсеПользователи;
	
	Если НЕ ПравоДоступа("Добавление", Метаданные.Справочники.ГруппыПользователей) Тогда
		Элементы.СоздатьГруппуПользователей.Видимость = Ложь;
	КонецЕсли;
	Если НЕ ПравоДоступа("Добавление", Метаданные.Справочники.Пользователи) Тогда
		Элементы.СоздатьПользователя.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.РежимВыбора Тогда
	
		Если Элементы.Найти("ПользователиИБ") <> Неопределено Тогда
			Элементы.ПользователиИБ.Видимость = Ложь;
		КонецЕсли;
		
		// Отбор не помеченных на удаление
		ПользователиСписок.Отбор.Элементы[0].Использование = Истина;
		
		Элементы.ПользователиСписок.РежимВыбора        =    Истина;
		Элементы.ГруппыПользователей.РежимВыбора       =    Параметры.ВыборГруппПользователей;
		Элементы.ВыбратьГруппуПользователей.Видимость  =    Параметры.ВыборГруппПользователей;
		Элементы.ВыбратьПользователя.КнопкаПоУмолчанию = НЕ Параметры.ВыборГруппПользователей;
		
		Если Параметры.ЗакрыватьПриВыборе = Ложь Тогда
			// Режим подбора
			Элементы.ПользователиСписок.МножественныйВыбор = Истина;
			
			Если Параметры.ВыборГруппПользователей Тогда
				Заголовок                                       = НСтр("ru = 'Подбор пользователей и групп'");
				Элементы.ВыбратьПользователя.Заголовок          = НСтр("ru = 'Выбрать пользователей'");
				Элементы.ВыбратьГруппуПользователей.Заголовок   = НСтр("ru = 'Выбрать группы'");
				
				Элементы.ГруппыПользователей.МножественныйВыбор = Истина;
				Элементы.ГруппыПользователей.РежимВыделения     = РежимВыделенияТаблицы.Множественный;
			Иначе
				Заголовок                                       = НСтр("ru = 'Подбор пользователей'");
			КонецЕсли;
		Иначе
			// Режим выбора
			Если Параметры.ВыборГруппПользователей Тогда
				Заголовок                                     = НСтр("ru = 'Выбор пользователя или группы'");
				Элементы.ВыбратьПользователя.Заголовок        = НСтр("ru = 'Выбрать пользователя'");
			Иначе
				Заголовок                                     = НСтр("ru = 'Выбор пользователя'");
			КонецЕсли;
		КонецЕсли;
	Иначе
		Элементы.ВыбратьПользователя.Видимость        = Ложь;
		Элементы.ВыбратьГруппуПользователей.Видимость = Ложь;
	КонецЕсли;
	
	ОбновитьСодержимоеФормыПриИзмененииГруппы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ВРег(ИмяСобытия) = ВРег("Запись_ГруппыПользователей")
	   И Источник = Элементы.ГруппыПользователей.ТекущаяСтрока Тогда
		
		Элементы.ПользователиСписок.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если Настройки[ВыбиратьИерархически] = Неопределено Тогда
		ВыбиратьИерархически = Истина;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ВыбиратьИерархическиПриИзменении(Элемент)
	
	ОбновитьСодержимоеФормыПриИзмененииГруппы(ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ ГруппыПользователей

&НаКлиенте
Процедура ГруппыПользователейПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ГруппыПользователейПослеАктивизацииСтроки", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппыПользователейВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОповеститьОВыборе(Значение);
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппыПользователейПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если НЕ Копирование Тогда
		Отказ = Истина;
		ПараметрыФормы = Новый Структура;
		
		Если ЗначениеЗаполнено(Элементы.ГруппыПользователей.ТекущаяСтрока) Тогда
			
			ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("Родитель", Элементы.ГруппыПользователей.ТекущаяСтрока));
		КонецЕсли;
		
		ОткрытьФорму("Справочник.ГруппыПользователей.ФормаОбъекта", ПараметрыФормы, Элементы.ГруппыПользователей);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ ПользователиСписок

&НаКлиенте
Процедура ПользователиСписокВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОповеститьОВыборе(Значение);
	
КонецПроцедуры

&НаКлиенте
Процедура ПользователиСписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ГруппаНовогоПользователя", Элементы.ГруппыПользователей.ТекущаяСтрока);
	
	Если Копирование И Элемент.ТекущиеДанные <> Неопределено Тогда
		ПараметрыФормы.Вставить("ЗначениеКопирования", Элемент.ТекущаяСтрока);
	КонецЕсли;
	
	ОткрытьФорму("Справочник.Пользователи.ФормаОбъекта", ПараметрыФормы, Элементы.ПользователиСписок);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура СоздатьГруппуПользователей(Команда)
	
	Элементы.ГруппыПользователей.ДобавитьСтроку();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьНедействительныхПользователей(Команда)
	
	ПоказыватьНедействительныхПользователей = Не ПоказыватьНедействительныхПользователей;
	
	Элементы.ПоказыватьНедействительныхПользователей.Пометка = ПоказыватьНедействительныхПользователей;
	
	Если ПоказыватьНедействительныхПользователей Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(ПользователиСписок.Отбор, "Недействителен");
	Иначе	
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			ПользователиСписок.Отбор,
			"Недействителен",
			Ложь);
	КонецЕсли;
		
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ГруппыПользователейПослеАктивизацииСтроки()
	
	ОбновитьСодержимоеФормыПриИзмененииГруппы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьСодержимоеФормыПриИзмененииГруппы(ЭтаФорма)
	
	Элементы = ЭтаФорма.Элементы;
	Если НЕ ЭтаФорма.ИспользоватьГруппы
	 ИЛИ Элементы.ГруппыПользователей.ТекущаяСтрока = ЭтаФорма.ГруппаПользователейВсеПользователи Тогда
		Элементы.ГруппаПоказыватьПользователейДочернихГрупп.ТекущаяСтраница = Элементы.ГруппаНельзяУстановитьСвойство;
		ОбновитьЗначениеПараметраКомпоновкиДанных(ЭтаФорма.ПользователиСписок, "ВыбиратьИерархически", Истина);
		ОбновитьЗначениеПараметраКомпоновкиДанных(ЭтаФорма.ПользователиСписок, "ГруппаПользователей", ЭтаФорма.ГруппаПользователейВсеПользователи);
	Иначе
		Элементы.ГруппаПоказыватьПользователейДочернихГрупп.ТекущаяСтраница = Элементы.ГруппаУстановитьСвойство;
		ОбновитьЗначениеПараметраКомпоновкиДанных(ЭтаФорма.ПользователиСписок, "ВыбиратьИерархически", ЭтаФорма.ВыбиратьИерархически);
		ОбновитьЗначениеПараметраКомпоновкиДанных(ЭтаФорма.ПользователиСписок, "ГруппаПользователей", Элементы.ГруппыПользователей.ТекущаяСтрока);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьЗначениеПараметраКомпоновкиДанных(Знач ВладелецПараметров, Знач ИмяПараметра, Знач ЗначениеПараметра)
	
	Для каждого Параметр Из ВладелецПараметров.Параметры.Элементы Цикл
		Если Строка(Параметр.Параметр) = ИмяПараметра Тогда
			Если Параметр.Использование И Параметр.Значение = ЗначениеПараметра Тогда
				Возврат;
			КонецЕсли;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	ВладелецПараметров.Параметры.УстановитьЗначениеПараметра(ИмяПараметра, ЗначениеПараметра);
	
КонецПроцедуры
