////////////////////////////////////////////////////////////////////////////////
// МОДУЛЬ УПРАВЛЕНИЯ ИНДЕКСОМ ПОЛНОТЕКСТОВОГО ПОИСКА

// Обновляет индекс полнотекстового поиска
Процедура ОбновлениеИндексаППД() Экспорт
	
	Если ПустаяСтрока(ИмяПользователя()) Тогда
		УстановитьПривилегированныйРежим(Истина);
	КонецЕсли;
	
	РазрешитьПолнотекстовыйПоиск = ПолнотекстовыйПоиск.ПолучитьРежимПолнотекстовогоПоиска() = РежимПолнотекстовогоПоиска.Разрешить;
	Если РазрешитьПолнотекстовыйПоиск = Ложь Тогда
		Возврат;
	КонецЕсли;	
	
	Попытка
		ЗаписьЖурналаРегистрации(СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Информация, , ,
			НСтр("ru = 'Начато регламентное индексирование порции'"));
		
		ПолнотекстовыйПоиск.ОбновитьИндекс(Ложь, Истина);
		
		ЗаписьЖурналаРегистрации(СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Информация, , ,
			НСтр("ru = 'Закончено регламентное  индексирование порции'"));
	Исключение
		ТекстСообщенияОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		  НСтр("ru = 'Во время регламентного обновления индекса произошла неизвестная ошибка.
		             |%1'"), ОписаниеОшибки());
		ЗаписьЖурналаРегистрации(СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Ошибка, , ,
			ТекстСообщенияОбОшибке);
	КонецПопытки;
	
КонецПроцедуры

// Выполняет слияние индексов полнотекстового поиска
Процедура СлияниеИндексаППД() Экспорт
	
	Если ПустаяСтрока(ИмяПользователя()) Тогда
		УстановитьПривилегированныйРежим(Истина);
	КонецЕсли;
	
	РазрешитьПолнотекстовыйПоиск = ПолнотекстовыйПоиск.ПолучитьРежимПолнотекстовогоПоиска() = РежимПолнотекстовогоПоиска.Разрешить;
	Если РазрешитьПолнотекстовыйПоиск = Ложь Тогда
		Возврат;
	КонецЕсли;	
	
	Попытка
		ЗаписьЖурналаРегистрации(СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Информация, , ,
			НСтр("ru = 'Начато регламентное слияние индексов'"));
		
		ПолнотекстовыйПоиск.ОбновитьИндекс(Истина);
		
		ЗаписьЖурналаРегистрации(СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Информация, , ,
			НСтр("ru = 'Закончено регламентное слияние индексов'"));
	Исключение
		ТекстСообщенияОбОшибке =
		  СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		    НСтр("ru = 'Во время регламентного слияния индекса произошла неизвестная ошибка.
		               |%1'"), ОписаниеОшибки());
		ЗаписьЖурналаРегистрации(СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Ошибка, , ,
			ТекстСообщенияОбОшибке);
	КонецПопытки;
	
КонецПроцедуры

Функция СобытиеЖурналаРегистрации()
	Возврат НСтр("ru = 'Полнотекстовое индексирование'");	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Обновление информационной базы.

// Добавляет в список Обработчики процедуры-обработчики обновления,
// необходимые данной подсистеме.
//
// Параметры:
//   Обработчики - ТаблицаЗначений - см. описание функции НоваяТаблицаОбработчиковОбновления
//                                   общего модуля ОбновлениеИнформационнойБазы.
// 
Процедура ЗарегистрироватьОбработчикиОбновления(Обработчики) Экспорт
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "1.0.3.10";
	Обработчик.Процедура = "ПолнотекстовыйПоискСервер.ИнициализироватьФункциональнуюОпциюПолнотекстовыйПоиск";
	Обработчик.ОбщиеДанные = Истина;
	
КонецПроцедуры	

// Установить константу ИспользоватьПолнотекстовыйПоиск синхронно с ПолнотекстовыйПоиск.ПолучитьРежимПолнотекстовогоПоиска()
Процедура ИнициализироватьФункциональнуюОпциюПолнотекстовыйПоиск() Экспорт
	
	ЗначениеКонстанты = ПолнотекстовыйПоиск.ПолучитьРежимПолнотекстовогоПоиска() = РежимПолнотекстовогоПоиска.Разрешить;
	Константы.ИспользоватьПолнотекстовыйПоиск.Установить(ЗначениеКонстанты);
	
КонецПроцедуры

// Возвращает, актуален ли индекс полнотекстового поиска. 
//  Если индекс обновлялся менее 5 минут назад, считаем что он актуален 
//  Проверка функциональной опции, например "ИспользоватьПолнотекстовыйПоиск" - выполняется в вызывающем коде
Функция ИндексПоискаАктуален() Экспорт
	
	ИспользоватьПолнотекстовыйПоиск = 
		(ПолнотекстовыйПоиск.ПолучитьРежимПолнотекстовогоПоиска() = РежимПолнотекстовогоПоиска.Разрешить);
	
		Если ИспользоватьПолнотекстовыйПоиск Тогда
			
			ИндексПолнотекстовогоПоискаАктуален = ПолнотекстовыйПоиск.ИндексАктуален();
			Если Не ИндексПолнотекстовогоПоискаАктуален Тогда
				
				// Если индекс обновлялся менее 5 минут назад, считаем что он актуален
				Если ТекущаяДата() - ПолнотекстовыйПоиск.ДатаАктуальности() < 300 Тогда
					ИндексПолнотекстовогоПоискаАктуален = Истина;
				КонецЕсли;
				
			КонецЕсли;
		
		Возврат ИндексПолнотекстовогоПоискаАктуален;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции	